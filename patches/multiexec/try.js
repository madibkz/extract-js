/*
turns
    try {
        statements1
    } catch (e) {
        statements2
    } finally {
        statements3
    }
=>
    try {
        console.log("Entered try statement");
        statements1
        throw "Throwing error on purpose to trigger catch block"
    } catch (e) {
        console.log("Entered catch clause");
        statements2
    } finally {
        console.log("Entered finally clause");
        statements3
    }
 */

module.exports = (args) => {
    args.block.body.unshift({
        "type": "BlockStatement",
        "body": [
            {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "object": {
                            "type": "Identifier",
                            "name": "console"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "computed": false
                    },
                    "arguments": [
                        {
                            "type": "Literal",
                            "value": `Entered try statement`,
                        }
                    ]
                }
            },
        ]
    })
    args.block.body.push({
        "type": "ThrowStatement",
        "start": 211,
        "end": 267,
        "argument": {
            "type": "Literal",
                "start": 217,
                "end": 267,
                "value": "Throwing error on purpose to trigger catch block",
                "raw": "\"Throwing error on purpose to trigger catch block\""
        }
    })
    args.handler.body.body.unshift({
        "type": "BlockStatement",
        "body": [
            {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "object": {
                            "type": "Identifier",
                            "name": "console"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "computed": false
                    },
                    "arguments": [
                        {
                            "type": "Literal",
                            "value": `Entered catch clause`,
                        }
                    ]
                }
            },
        ]
    })
    args.finalizer ? args.finalizer.body.unshift({
        "type": "BlockStatement",
        "body": [
            {
                "type": "ExpressionStatement",
                "expression": {
                    "type": "CallExpression",
                    "callee": {
                        "type": "MemberExpression",
                        "object": {
                            "type": "Identifier",
                            "name": "console"
                        },
                        "property": {
                            "type": "Identifier",
                            "name": "log"
                        },
                        "computed": false
                    },
                    "arguments": [
                        {
                            "type": "Literal",
                            "value": `Entered finalizer clause`,
                        }
                    ]
                }
            },
        ]
    }) : "";
    return {
        autogenerated: true,
        type: args.type,
        block: args.block,
        handler: args.handler,
        finalizer: args.finalizer,
    }
};
